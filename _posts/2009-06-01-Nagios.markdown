---
layout: post 
title: Nagios
---

### Install

A quick dirty method of installation on Debian based systems, incluidng
Ubuntu is to simply type: `sudo apt-get install nagios` . However the
package used could be out of date. It is easy to complile Nagios from
source using the latest version:
<http://nagios.sourceforge.net/docs/3_0/quickstart-ubuntu.html>

### Install plugins

    wget http://prdownloads.sourceforge.net/sourceforge/nagiosplug/nagios-plugins-1.4.13.tar.gz
    tar zxf nagios-plugins-1.4.13.tar.gz
    cd nagios-plugins-1.4.13/
    sudo apt-get install build-essential
    ./configure --enable-perl-modules --prefix=/usr/local/nagios --with-nagios-user=nagios
    make all
    sudo make install
    sudo chown nagios:nagios /usr/local/nagios/libexec

### Configuration

Config fies are /etc/nagios by default if installed using apt-get and
are in /usr/local/nagios/etc by default when compliled from source.

#### Verify config

/usr/local/nagios/bin/nagios -v /usr/local/nagios/etc/nagios.cfg

### Mail notifications

Ensure package mailx is installed.

Setup exim to email to remote domains:

    dpkg-reconfigure exim4-config

### Install nsclient++ for windows machines

Set NSC.ini to state the Nagios server to restrict what IPs can use it.

    nslicent++ /install

Then start service

### Exchange 2007 Monitoring

#### Services

    #Mailbox servers
    define service{
            use                     generic-service
    hostgroup_name  ex-be-servers
            service_description     Ex AD Topology
            check_command           check_nt!SERVICESTATE!-d SHOWALL -l MSExchangeADTopology
            }
    define service{
            use                     generic-service
    hostgroup_name  ex-be-servers
            service_description     Ex IS
            check_command           check_nt!SERVICESTATE!-d SHOWALL -l MSExchangeIS
            }
    define service{
            use                     generic-service
    hostgroup_name  ex-be-servers
            service_description     Ex Mail Submission
            check_command           check_nt!SERVICESTATE!-d SHOWALL -l MSExchangeMailSubmission
            }
    define service{
            use                     generic-service
    hostgroup_name  ex-be-servers
            service_description     Ex Mailbox Assistants
            check_command           check_nt!SERVICESTATE!-d SHOWALL -l MSExchangeMailboxAssistants
            }
    define service{
            use                     generic-service
    hostgroup_name  ex-be-servers
            service_description     Ex DB Replication
            check_command           check_nt!SERVICESTATE!-d SHOWALL -l MSExchangeRepl
            }
    define service{
            use                     generic-service
    hostgroup_name  ex-be-servers
            service_description     Ex Search Indexing
            check_command           check_nt!SERVICESTATE!-d SHOWALL -l MSExchangeSearch
            }
    define service{
            use                     generic-service
    hostgroup_name  ex-be-servers
            service_description     Ex Service Hosting
            check_command           check_nt!SERVICESTATE!-d SHOWALL -l MSExchangeServiceHost
            }
    define service{
            use                     generic-service
    hostgroup_name  ex-be-servers
            service_description     Ex System Attendant
            check_command           check_nt!SERVICESTATE!-d SHOWALL -l MSExchangeSA
            }
    define service{
            use                     generic-service
    hostgroup_name  ex-be-servers
            service_description     Ex Remote Transport Log Search
            check_command           check_nt!SERVICESTATE!-d SHOWALL -l MSExchangeTransportLogSearch
            }
    define service{
            use                     generic-service
    hostgroup_name  ex-be-servers
            service_description     Ex DB Engine for Ex Search
            check_command           check_nt!SERVICESTATE!-d SHOWALL -l msftesql-Exchange
            }

    #CAS and Hub Transport servers
    define service{
            use                     generic-service
    hostgroup_name  ex-cashub-servers
            service_description     Ex AD Topology
            check_command           check_nt!SERVICESTATE!-d SHOWALL -l MSExchangeADTopology
            }
    define service{
            use                     generic-service
    hostgroup_name  ex-cashub-servers
            service_description     Ex Anti-spam Update
            check_command           check_nt!SERVICESTATE!-d SHOWALL -l MSExchangeAntispamUpdate
            }
    define service{
            use                     generic-service
    hostgroup_name  ex-cashub-servers
            service_description     Ex File Distribution
            check_command           check_nt!SERVICESTATE!-d SHOWALL -l MSExchangeFDS
            }
    define service{
            use                     generic-service
    hostgroup_name  ex-cashub-servers
            service_description     Ex POP3
            check_command           check_nt!SERVICESTATE!-d SHOWALL -l MSExchangePOP3
            }
    define service{
            use                     generic-service
    hostgroup_name  ex-cashub-servers
            service_description     Ex Service Hosting
            check_command           check_nt!SERVICESTATE!-d SHOWALL -l MSExchangeServiceHost
            }
    define service{
            use                     generic-service
    hostgroup_name  ex-cashub-servers
            service_description     Ex Transport
            check_command           check_nt!SERVICESTATE!-d SHOWALL -l MSExchangeTransport
            }
    define service{
            use                     generic-service
    hostgroup_name  ex-cashub-servers
            service_description     Ex Transport Log Search
            check_command           check_nt!SERVICESTATE!-d SHOWALL -l MSExchangeTransportLogSearch
            }

#### Replication Health / Status

If SCR, LCR or CCR is deployed in your organisation its status can be
checked through use of Nagios monitoring its WMI counter:

    define service{
            use                     generic-service
    hostgroup_name  ex-be-servers
            service_description     Ex SCR
            check_command           check_nt!COUNTER!-l "\\\\.\\MSExchange Replication(_total)\\Failed","Replication failure status (0 = OK): %.f" -c 1
            }

### Exchange 2003 Monitoring

    #ex2003 Servers
    define service{
            use                     generic-service
    hostgroup_name  ex2003-servers
            service_description     Ex IS
            check_command           check_nt!SERVICESTATE!-d SHOWALL -l MSExchangeIS
            }
    define service{
            use                     generic-service
    hostgroup_name  ex2003-servers
            service_description     Ex WMI
            check_command           check_nt!SERVICESTATE!-d SHOWALL -l MSExchangeMGMT
            }
    define service{
            use                     generic-service
    hostgroup_name  ex2003-servers
            service_description     Ex MTA Stacks
            check_command           check_nt!SERVICESTATE!-d SHOWALL -l MSExchangeMTA
            }
    define service{
            use                     generic-service
    hostgroup_name  ex2003-servers
            service_description     Ex POP3
            check_command           check_nt!SERVICESTATE!-d SHOWALL -l POP3Svc
            }
    define service{
            use                     generic-service
    hostgroup_name  ex2003-servers
            service_description     Ex Routing Engine
            check_command           check_nt!SERVICESTATE!-d SHOWALL -l RESvc
            }
    define service{
            use                     generic-service
    hostgroup_name  ex2003-servers
            service_description     Ex System Attendant
            check_command           check_nt!SERVICESTATE!-d SHOWALL -l MSExchangeSA
            }
    define service{
            use                     generic-service
    hostgroup_name  ex2003-servers
            service_description     SMTP
            check_command           check_nt!SERVICESTATE!-d SHOWALL -l SMTPSVC
            }

### RBL Status

The check\_bl plugin allows monitoring of RBL status for your outbound
relay servers.

#### Plugin installation

1.  Download and extract
    <http://bashton.com/downloads/nagios-check_bl-1.0.tar.gz>
2.  Copy check\_bl (perl script) to your Nagios plugins dir, usually
    /usr/local/nagios/libexec
3.  Install the NET::DNS module for perl, as otherwise the script will
    be unable to perform the necessary DNS lookups. The package name
    varies from distro to distro. On Ubuntu it is libnet-dns-perl . Try
    <http://www.bioperl.org/wiki/Tutorial:Installing_Perl_modules> if
    you are problems finding it.
4.  Add the following config with your IP(S) to Nagios\' config:

<!-- -->

    define  command {
            command_name    check_bl
            command_line    $USER1$/check_bl -H 1.1.1.1 -B zen.spamhaus.org bl.spamcop.net dnsbl.ahbl.org dnsbl.njabl.org dnsbl.sorbs.net virbl.dnsbl.bit.nl rbl.efnet.org phishing.rbl.msrbl.net 0spam.fusionzero.com list.dsbl.org multihop.dsbl.org unconfirmed.dsbl.org will-spam-for-food.eu.org blacklist.spambag.org blackholes.brainerd.net blackholes.uceb.org spamsources.dnsbl.info map.spam-rbl.com ns1.unsubscore.com psbl.surriel.com l2.spews.dnsbl.sorbs.net bl.csma.biz sbl.csma.biz dynablock.njabl.org no-more-funn.moensted.dk  ubl.unsubscore.com dnsbl-1.uceprotect.net dnsbl-2.uceprotect.net dnsbl-3.uceprotect.net spamguard.leadmon.net opm.blitzed.org bl.spamcannibal.org rbl.schulte.org dnsbl.ahbl.org virbl.dnsbl.bit.nl combined.rbl.msrbl.net
            }
    define service{
            use                     generic-service
    hostgroup_name  ex-cashub-servers
            service_description     Ex RBL Status
            check_command           check_bl
            }

### End to end email checking

Nagios can monitor end-to-end email functonality when used with a perl
script. The script sends emails via SMTP and expects them to arrive in a
defined POP3 email account. Using an external mail forward this script
enables you to assert functionality of sending & receiving emails.

#### Plugin installation

1.  Download the script:
    <http://www.monitoringexchange.org/cgi-bin/page.cgi?g=Detailed%2F1807.html;d=1>

<!-- -->

1.  Install the MAIL::POP3Client module for perl, as otherwise the
    script will be unable to perform the necessary POP3 connections. The
    package name varies from distro to distro. On Ubuntu it is
    libmail-pop3client-perl.
2.  Install Dovecot pop3 server:
    `sudo apt-get install dovecot-common dovecot-pop3d` It takes
    users/passes from /etc/passwd .
3.  Install Postfix MTA: `sudo apt-get install postfix`. Configure
    through the /etc/postfix/main.cf file or use
    `sudo dpkg-reconfigure postfix`. See
    <https://help.ubuntu.com/community/Postfix>
4.  Setup relevant auto-forwards for your acc and allow-relay rules if
    required.
5.  Add the follwing Nagios config, adjusting for your setup as
    required:

<!-- -->

    define service{
            use                     generic-service
    host_name  Email_server
            service_description     Email Send/Receieve Test
            check_command           check_email
            }
    define command{
    command_name check_email
    command_line $USER1$/check_email.pl -poph=127.0.0.1 -popu=emailtest -pa=pop3password -smtph=FqdnOfRealyserver -from=emailtest@nagiosserver -to=emailtest@emailserver.co.uk -pendc=2 -lostc=0 -statfile=/stat/statfile
    }

Notes:

-   The scrupt requires access to write to a temporary \'stat\' file.
    Nagios in my setup at least is very particular with permissions. It
    is best to give it its own root folder as seen above or place it in
    /tmp.
-   The script can also server as a check\_tcp for your relay server as
    if it cannot connect it returns critical to Nagios.
-   If using Exchange the auto forward rule will need to be set using AD
    (Exchange 2003) or the
    [EMC](http://technet.microsoft.com/en-us/library/bb123762.aspx)
    (Exchange 2007).

### Domain Expiry Monitoring

1.  Download the
    [plugin](http://dns.measurement-factory.com/tools/nagios-plugins/src/check_whois)
    and save in your /usr/local/nagios/libexec dir.
2.  Install the Date::Manip Perl module, on Ubuntu the package is
    libdate-manip-perl , if that fails you try search for it using
    `apt-cache search Date::Manip` .
3.  Install whois if not present on your system.
4.  Append this command config to your
    /usr/local/nagios/etc/objects/commands.cfg:

<!-- -->

    define command{
            command_name    check_whois
            command_line    $USER1$/check_whois $ARG1$
    }

It is best not to use \$HOSTADDRESS\$ as the argument for the check
command as otherwise every domain will need to have its own host config
and Nagios will try to ping it by default.

The command should then be referenced in a service:

    define service{
            use     service
            host_name       Domains-Expiration
            service_description domain.com
            check_command check_whois!domain.com
    }

### LDAP Monitoring

This can be used for any LDAP service including Windows Domain
Controllers and of course OpenLDAP. The plugin cannot check Windows
Domain Controllers when using login credentials as Windows will only
accept credentials over SSL.

1.  Download the
    \[<http://www.monitoringexchange.org/cgi-bin/page.cgi?g=Detailed%2F1325.html;d=1>
    plugin and save in your /usr/local/nagios/libexec dir.
2.  Install the NET::LDAP module perl, as otherwise the script cannot
    perform the LDAP lookups. On Ubuntu the package name is
    libnet-ldap-perl .
3.  Append this command config to your
    /usr/local/nagios/etc/objects/commands.cfg:

<!-- -->

    define command{
            command_name    check_ldap
            command_line    $USER1$/check_ldap -H $HOSTADDRESS$ $ARG1$
    }

The command can then be referrenced as a service, this example it uses a
hostgroup which contains all the Domain Controllers:

    define service{
            use                     generic-service
    hostgroup_name  dcs
            service_description     NTDS LDAP Bind check
            check_command           check_ldap
    }

The hostgroup config could look like this:

    define hostgroup{
            hostgroup_name dcs
            alias Domain Controllers
            members DC1, DC2
    }
